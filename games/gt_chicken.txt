;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;
;;;  Game Theory: Iterated Chicken
;;;
;;;  A two player game with simultaneous play in which, in each round,
;;;  players choose either to drive straight forward toward each other
;;;  or swerve off the road. If both players drive straight forward,
;;;  they both crash and receive zero points. If one drives straight
;;;  and the other swerves, the player who drove straight wins and gets
;;;  five points, and the other player gets three points. If both players
;;;  swerve, they each get four points.
;;;
;;;  Background: http://en.wikipedia.org/wiki/Chicken_(game)
;;;
;;;  GDL BY: Sam Schreiber (schreib@cs.stanford.edu)
;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; ROLE Relations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(role white)
(role black)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Constants
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(maxRounds 20)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; INIT Relations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(init (whiteScore 0))
(init (blackScore 0))
(init (rounds 0))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; LEGAL Relations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(<= (legal black straight)
    (maxRounds ?x)
    (not (true (rounds ?x))))
(<= (legal black swerve)
    (maxRounds ?x)
    (not (true (rounds ?x))))

(<= (legal white straight)
    (maxRounds ?x)
    (not (true (rounds ?x))))
(<= (legal white swerve)
    (maxRounds ?x)
    (not (true (rounds ?x))))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; NEXT Relations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(<= (next (rounds ?x1))
    (true (rounds ?x))
    (succ ?x ?x1))

(<= (next (whiteScore ?x5))
    (true (whiteScore ?x))
    (succ ?x ?x1)
    (succ ?x1 ?x2)
    (succ ?x2 ?x3)
    (succ ?x3 ?x4)
    (succ ?x4 ?x5)
    (does white straight)
    (does black swerve))
(<= (next (blackScore ?x3))
    (true (blackScore ?x))
    (succ ?x ?x1)
    (succ ?x1 ?x2)
    (succ ?x2 ?x3)    
    (does white straight)
    (does black swerve))    

(<= (next (blackScore ?x5))
    (true (blackScore ?x))
    (succ ?x ?x1)
    (succ ?x1 ?x2)
    (succ ?x2 ?x3)
    (succ ?x3 ?x4)
    (succ ?x4 ?x5)
    (does black straight)
    (does white swerve))
(<= (next (whiteScore ?x3))
    (true (whiteScore ?x))
    (succ ?x ?x1)
    (succ ?x1 ?x2)
    (succ ?x2 ?x3)
    (does black straight)
    (does white swerve))

(<= (next (blackScore ?x4))
    (true (blackScore ?x))
    (succ ?x ?x1)
    (succ ?x1 ?x2)
    (succ ?x2 ?x3)
    (succ ?x3 ?x4)
    (does black swerve)
    (does white swerve))
(<= (next (whiteScore ?x4))
    (true (whiteScore ?x))
    (succ ?x ?x1)
    (succ ?x1 ?x2)
    (succ ?x2 ?x3)
    (succ ?x3 ?x4)
    (does black swerve)
    (does white swerve))

(<= (next (blackScore ?x))
    (true (blackScore ?x))
    (does black straight)
    (does white straight))
(<= (next (whiteScore ?x))
    (true (whiteScore ?x))
    (does black straight)
    (does white straight))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; TERMINAL Relations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(<= terminal
    (maxRounds ?x)
    (true (rounds ?x)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; GOAL Relations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(<= (goal white ?x)
    (true (whiteScore ?x)))

(<= (goal black ?x)
    (true (blackScore ?x)))
    
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Static Relations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(succ 0 1)
(succ 1 2)
(succ 2 3)
(succ 3 4)
(succ 4 5)
(succ 5 6)
(succ 6 7)
(succ 7 8)
(succ 8 9)
(succ 9 10)
(succ 10 11)
(succ 11 12)
(succ 12 13)
(succ 13 14)
(succ 14 15)
(succ 15 16)
(succ 16 17)
(succ 17 18)
(succ 18 19)
(succ 19 20)
(succ 20 21)
(succ 21 22)
(succ 22 23)
(succ 23 24)
(succ 24 25)
(succ 25 26)
(succ 26 27)
(succ 27 28)
(succ 28 29)
(succ 29 30)
(succ 30 31)
(succ 31 32)
(succ 32 33)
(succ 33 34)
(succ 34 35)
(succ 35 36)
(succ 36 37)
(succ 37 38)
(succ 38 39)
(succ 39 40)
(succ 40 41)
(succ 41 42)
(succ 42 43)
(succ 43 44)
(succ 44 45)
(succ 45 46)
(succ 46 47)
(succ 47 48)
(succ 48 49)
(succ 49 50)
(succ 50 51)
(succ 51 52)
(succ 52 53)
(succ 53 54)
(succ 54 55)
(succ 55 56)
(succ 56 57)
(succ 57 58)
(succ 58 59)
(succ 59 60)
(succ 60 61)
(succ 61 62)
(succ 62 63)
(succ 63 64)
(succ 64 65)
(succ 65 66)
(succ 66 67)
(succ 67 68)
(succ 68 69)
(succ 69 70)
(succ 70 71)
(succ 71 72)
(succ 72 73)
(succ 73 74)
(succ 74 75)
(succ 75 76)
(succ 76 77)
(succ 77 78)
(succ 78 79)
(succ 79 80)
(succ 80 81)
(succ 81 82)
(succ 82 83)
(succ 83 84)
(succ 84 85)
(succ 85 86)
(succ 86 87)
(succ 87 88)
(succ 88 89)
(succ 89 90)
(succ 90 91)
(succ 91 92)
(succ 92 93)
(succ 93 94)
(succ 94 95)
(succ 95 96)
(succ 96 97)
(succ 97 98)
(succ 98 99)
(succ 99 100)